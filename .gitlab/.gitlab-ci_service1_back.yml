variables:
  GID: "1000"
  UID: "1000"

docker-build1:
  stage: build
  allow_failure: true
  # Use the official docker image.
  image: docker:latest
  #only: 
  #  - main
  services:
    - docker:dind
  before_script:
    - cd app/back/dockerfiles
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f composer.dockerfile .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  # logic: if true run job
  # rules:
  #   - if: $CI_COMMIT_BRANCH
  #     exists:
  #       - Dockerfile

docker-build2:
  stage: build
  allow_failure: true
  # Use the official docker image.
  image: docker:latest
  #only: 
  #  - main
  services:
    - docker:dind
  before_script:
    - cd app/back/dockerfiles
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f elasticsearch.dockerfile .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  # logic: if true run job
  # rules:
  #   - if: $CI_COMMIT_BRANCH
  #     exists:
  #       - Dockerfile
